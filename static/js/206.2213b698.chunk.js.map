{"version":3,"file":"static/js/206.2213b698.chunk.js","mappings":"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","sources":["API/API.jsx","components/SearchForm/SearchForm.jsx","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'd8fff794203ae9c9fd4883749cedddba';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const getMovieTrending = async () => {\n    try{\n        const response = await axios.get(\n            `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n        );\n        return response.data.results;\n    } catch (error){\n        alert('Something wrong!');\n        console.log(error);\n    }\n};\n\n\nexport const getSearchMovies = async query => {\n    try{\n        const response = await axios.get(\n            `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n        );\n        if(response.data.result.length === 0){\n            alert('There are no movies')\n        }\n        return response.data.results;\n    } catch(error){\n        alert('Something wrong');\n    }\n};\n\n\nexport const getMovieDetails = async id => {\n    try{\n        const response = await axios.get(\n            `${BASE_URL}movie/${id}?api_key=${API_KEY}`\n        );\n        return response.data;\n    } catch(error){\n        alert ('Something wrong!');\n    }\n};\n\n\nexport const getMoviesCredits = async movieId => {\n    try{\n        const response = await axios.get(\n            `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n        )\n        return response.data.cast;\n    } catch (error){\n        alert('Something wrong!');\n    }\n}\n\n\nexport const getMoviesReviews = async movieId => {\n    try{\n        const response = await axios.get(\n            `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n        )\n        return response.data.results;\n    } catch (error) {\n        alert('Something wrong');\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import React, { useState } from \"react\";\nimport { Container, Form, Input, Btn } from '../SearchForm/SearchForm.styled';\n\n\n\nexport const SearchForm = ({ onSubmit }) => {\n    const [value, setValue] = useState('');\n  \n    const onInputChange = e => setValue(e.target.value);\n  \n    const onSubmitForm = e => {\n      e.preventDefault();\n      onSubmit(value);\n      resetForm();\n    };\n  \n    const resetForm = () => setValue('');\n  \n    return (\n      <Container>\n        <Form onSubmit={onSubmitForm}>\n          <Input\n            type=\"text\"\n            value={value}\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search movies...\"\n            onChange={onInputChange}\n          />\n          <Btn type=\"submit\">Search</Btn>\n        </Form>\n      </Container>\n    );\n  };\n\n  export default SearchForm;","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 20px;\n  padding-bottom: 40px;\n  margin-top: 20px;\n`;\n\nexport const List = styled.li`\n  list-style: none;\n  border-radius: 4px;\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  transition: transform 0.3s;\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n\n  &:hover {\n    transform: scale(1.03);\n    transition: 400ms linear;\n    box-shadow: 4px 4px 6px 0px rgba(0, 0, 0, 0.9);\n  }\n\n  > a {\n    text-decoration: none;\n  }\n\n  img {\n    width: 350px;\n  }\n`;\n\nexport const Title = styled.h1`\n  padding: 4px;\n  color: black;\n  font-size: 20px;\n  font-weight: 700;\n  text-align: center;\n`;","import React from 'react'\nimport { useLocation, Link } from 'react-router-dom'\nimport { Container, List, Title } from '../MovieList/MovieList.styled';\nimport noPoster from '../../image/No_image_poster.png'\n\nconst MovieList = ({movies}) => {\n    const location = useLocation();\n\n    return (\n        <Container>\n          {movies.map(({ poster_path, title, id }) => {\n            return (\n              <List key={id}>\n                <Link to={`/movies/${id}`} state={{ from: location }}>\n                  <img\n                    src={\n                      poster_path !== null\n                        ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                        : noPoster\n                    }\n                    alt={title}\n                  />\n                  <Title>{title}</Title>\n                </Link>\n              </List>\n            );\n          })}\n        </Container>\n      );\n    };\n\n    export default MovieList;","import SearchForm from \"components/SearchForm/SearchForm\";\nimport { useEffect, useState } from\"react\"\nimport { useSearchParams } from \"react-router-dom\";\nimport {getSearchMovies} from '../../API/API'\nimport MovieList from \"components/MovieList/MovieList\";\nimport { Loader } from \"Loader/Loader\";\n\n\n\nconst Movies = () => {\n    const [movies, setMovies] = useState(null);\n    const [onLoad, setOnLoad] = useState(false);\n    const [error, setError] = useState(null);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const searchValue = searchParams.get('query') ?? '';\n\n\nuseEffect(()=>{\n    const fetchMovie = async () => {\n        if(!searchValue) return;\n        try{\n            setOnLoad(true);\n            const data = await getSearchMovies(searchValue);\n            setMovies(data);\n            setOnLoad(false);\n        }catch(error){\n            setError(error);\n        }finally{\n            setOnLoad(false);\n        }\n    }\n    fetchMovie();\n}, [searchValue]);\n\nconst onInputSearch = value => {\n    setSearchParams({ query: value});\n};\n\nreturn (\n    <main>\n        <SearchForm onSubmit={onInputSearch}/>\n        {onLoad && <Loader/>}\n        {movies && <MovieList movies={movies}/>}\n        {error && <p>Something wrong, try arain</p>}\n    </main>\n)\n}\n\nexport default Movies;"],"names":["API_KEY","BASE_URL","getSearchMovies","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee2","query","response","_context2","prev","next","axios","concat","sent","data","result","length","alert","abrupt","results","t0","stop","_x","apply","arguments","getMovieDetails","_ref3","_callee3","id","_context3","_x2","getMoviesCredits","_ref4","_callee4","movieId","_context4","cast","_x3","_ref","onSubmit","_useState","useState","_useState2","_slicedToArray","value","setValue","resetForm","_jsx","Container","children","_jsxs","Form","e","preventDefault","Input","type","autoComplete","autoFocus","placeholder","onChange","target","Btn","styled","_templateObject","_taggedTemplateLiteral","List","_templateObject2","Title","_templateObject3","movies","location","useLocation","map","poster_path","title","Link","to","state","from","src","noPoster","alt","_searchParams$get","setMovies","_useState3","_useState4","onLoad","setOnLoad","_useState5","_useState6","error","setError","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","searchValue","get","useEffect","fetchMovie","_callee","_context","finish","SearchForm","Loader","MovieList"],"sourceRoot":""}