{"version":3,"file":"static/js/145.86578881.chunk.js","mappings":"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","sources":["API/API.jsx","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'd8fff794203ae9c9fd4883749cedddba';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const getMovieTrending = async () => {\n    try{\n        const response = await axios.get(\n            `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n        );\n        return response.data.results;\n    } catch (error){\n        alert('Something wrong!');\n        console.log(error);\n    }\n};\n\n\nexport const getSearchMovies = async query => {\n    try{\n        const response = await axios.get(\n            `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n        );\n        if(response.data.result.length === 0){\n            alert('There are no movies')\n        }\n        return response.data.results;\n    } catch(error){\n        alert('Something wrong');\n    }\n};\n\n\nexport const getMovieDetails = async id => {\n    try{\n        const response = await axios.get(\n            `${BASE_URL}movie/${id}?api_key=${API_KEY}`\n        );\n        return response.data;\n    } catch(error){\n        alert ('Something wrong!');\n    }\n};\n\n\nexport const getMoviesCredits = async movieId => {\n    try{\n        const response = await axios.get(\n            `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n        )\n        return response.data.cast;\n    } catch (error){\n        alert('Something wrong!');\n    }\n}\n\n\nexport const getMoviesReviews = async movieId => {\n    try{\n        const response = await axios.get(\n            `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n        )\n        return response.data.results;\n    } catch (error) {\n        alert('Something wrong');\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 20px;\n  padding-bottom: 40px;\n  margin-top: 20px;\n`;\n\nexport const List = styled.li`\n  list-style: none;\n  border-radius: 4px;\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  transition: transform 0.3s;\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n\n  &:hover {\n    transform: scale(1.03);\n    transition: 400ms linear;\n    box-shadow: 4px 4px 6px 0px rgba(0, 0, 0, 0.9);\n  }\n\n  > a {\n    text-decoration: none;\n  }\n\n  img {\n    width: 350px;\n  }\n`;\n\nexport const Title = styled.h1`\n  padding: 4px;\n  color: black;\n  font-size: 20px;\n  font-weight: 700;\n  text-align: center;\n`;","import React from 'react'\nimport { useLocation, Link } from 'react-router-dom'\nimport { Container, List, Title } from '../MovieList/MovieList.styled';\nimport noPoster from '../../image/No_image_poster.png'\n\nexport const MovieList = ({movies}) => {\n    const location = useLocation();\n\n    return (\n        <Container>\n          {movies.map(({ poster_path, title, id }) => {\n            return (\n              <List key={id}>\n                <Link to={`/movies/${id}`} state={{ from: location }}>\n                  <img\n                    src={\n                      poster_path !== null\n                        ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                        : noPoster\n                    }\n                    alt={title}\n                  />\n                  <Title>{title}</Title>\n                </Link>\n              </List>\n            );\n          })}\n        </Container>\n      );\n    };\n\n    export default MovieList;","import React, { useState } from \"react\";\nimport { Container, Form, Input, Btn } from '../SearchForm/SearchForm.styled';\n\n\n\nexport const SearchForm = ({ onSubmit }) => {\n    const [value, setValue] = useState('');\n  \n    const onInputChange = e => setValue(e.target.value);\n  \n    const onSubmitForm = e => {\n      e.preventDefault();\n      onSubmit(value);\n      resetForm();\n    };\n  \n    const resetForm = () => setValue('');\n  \n    return (\n      <Container>\n        <Form onSubmit={onSubmitForm}>\n          <Input\n            type=\"text\"\n            value={value}\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search movies...\"\n            onChange={onInputChange}\n          />\n          <Btn type=\"submit\">Search</Btn>\n        </Form>\n      </Container>\n    );\n  };\n\n  export default SearchForm;","import {SearchForm} from \"../../components/SearchForm/SearchForm\";\nimport { useEffect, useState } from\"react\"\nimport { useSearchParams } from \"react-router-dom\";\nimport {getSearchMovies} from '../../API/API'\nimport {MovieList} from \"../../components/MovieList/MovieList\";\nimport { Loader } from \"Loader/Loader\";\n\n\n\nconst Movies = () => {\n    const [movies, setMovies] = useState(null);\n    const [onLoad, setOnLoad] = useState(false);\n    const [error, setError] = useState(null);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const searchValue = searchParams.get('query') ?? '';\n\n\nuseEffect(()=>{\n    const fetchMovie = async () => {\n        if(!searchValue) return;\n        try{\n            setOnLoad(true);\n            const data = await getSearchMovies(searchValue);\n            setMovies(data);\n            setOnLoad(false);\n        }catch(error){\n            setError(error);\n        }finally{\n            setOnLoad(false);\n        }\n    }\n    fetchMovie();\n}, [searchValue]);\n\nconst onInputSearch = value => {\n    setSearchParams({ query: value});\n};\n\nreturn (\n    <main>\n        <SearchForm onSubmit={onInputSearch}/>\n        {onLoad && <Loader/>}\n        {movies && <MovieList movies={movies}/>}\n        {error && <p>Something wrong, try arain</p>}\n    </main>\n)\n}\n\nexport default Movies;"],"names":["API_KEY","BASE_URL","getMovieTrending","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","concat","sent","abrupt","data","results","t0","alert","console","log","stop","apply","arguments","getSearchMovies","_ref2","_callee2","query","_context2","result","length","_x","getMovieDetails","_ref3","_callee3","id","_context3","_x2","getMoviesCredits","_ref4","_callee4","movieId","_context4","cast","_x3","getMoviesReviews","_ref5","_callee5","_context5","_x4","Container","styled","_templateObject","_taggedTemplateLiteral","List","_templateObject2","Title","_templateObject3","MovieList","movies","location","useLocation","_jsx","children","map","poster_path","title","_jsxs","Link","to","state","from","src","noPoster","alt","SearchForm","onSubmit","_useState","useState","_useState2","_slicedToArray","value","setValue","resetForm","Form","e","preventDefault","Input","type","autoComplete","autoFocus","placeholder","onChange","target","Btn","_searchParams$get","setMovies","_useState3","_useState4","onLoad","setOnLoad","_useState5","_useState6","error","setError","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","searchValue","get","useEffect","fetchMovie","finish","Loader"],"sourceRoot":""}