{"version":3,"file":"static/js/561.1898115c.chunk.js","mappings":"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","sources":["API/API.jsx","components/CastList/CastList.styled.js","components/CastList/CastList.jsx","pages/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'd8fff794203ae9c9fd4883749cedddba';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const getMovieTrending = async () => {\n    try{\n        const response = await axios.get(\n            `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n        );\n        return response.data.results;\n    } catch (error){\n        alert('Something wrong!');\n        console.log(error);\n    }\n};\n\n\nexport const getSearchMovies = async query => {\n    try{\n        const response = await axios.get(\n            `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n        );\n        if(response.data.result.length === 0){\n            alert('There are no movies')\n        }\n        return response.data.results;\n    } catch(error){\n        alert('Something wrong');\n    }\n};\n\n\nexport const getMovieDetails = async id => {\n    try{\n        const response = await axios.get(\n            `${BASE_URL}movie/${id}?api_key=${API_KEY}`\n        );\n        return response.data;\n    } catch(error){\n        alert ('Something wrong!');\n    }\n};\n\n\nexport const getMoviesCredits = async movieId => {\n    try{\n        const response = await axios.get(\n            `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n        )\n        return response.data.cast;\n    } catch (error){\n        alert('Something wrong!');\n    }\n}\n\n\nexport const getMoviesReviews = async movieId => {\n    try{\n        const response = await axios.get(\n            `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n        )\n        return response.data.results;\n    } catch (error) {\n        alert('Something wrong');\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  justify-content: center;\n`;\n\nexport const Item = styled.li`\n  max-width: 200px;\n  border: 1px solid teal;\n  border-radius: 4px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nexport const Image = styled.img`\n  max-width: 200px;\n`;\n\nexport const CastInfo = styled.div`\n  padding-left: 10px;\n`;\n\nexport const Character = styled.p`\n  font-weight: 700;\n`;\n\nexport const Name = styled.h2`\n  color: teal;\n`;\n\nexport const CharacterInfo = styled.p`\n  font-weight: 500;\n`;","import React from 'react'\nimport noPoster from '../../image/No_image_poster.png'\nimport {\n    List,\n    Item,\n    Image,\n    Name,\n    CastInfo,\n    Character,\n    CharacterInfo,\n  } from '../CastList/CastList.styled';\n\n\n\n  export const CastList = ({ cast }) => {\n    if (!cast || !cast.length) {\n      return <p>No information about cast is available</p>;\n    } else\n      return (\n        <List>\n          {cast.map(({ profile_path, cast_id, name, character }) => {\n            return (\n              <Item key={cast_id}>\n                <Image\n                  src={\n                    profile_path !== null\n                      ? `https://image.tmdb.org/t/p/w200/${profile_path}`\n                      : noPoster\n                  }\n                  alt={name}\n                />\n                <CastInfo>\n                  <Name>{name}</Name>\n                  <Character>\n                    Character: <CharacterInfo>{character}</CharacterInfo>\n                  </Character>\n                </CastInfo>\n              </Item>\n            );\n          })}\n        </List>\n      );\n  };\n  \n  export default CastList;","\n\nimport CastList from 'components/CastList/CastList';\nimport React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { Loader } from 'Loader/Loader';\nimport { getMoviesCredits } from 'API/API';\n\nconst Cast = () => {\n    const {movieId} = useParams();\n    const [movieCast, setMovieCast] = useState();\n    const [error, setError] = useState(null);\n    const [onLoad, setOnLoad] = useState(false);\n\n    useEffect(() => {\n        const fetchMovieCast = async () => {\n            try{\n                setOnLoad(true);\n                const data = await getMoviesCredits(movieId);\n                setMovieCast(data);\n                setOnLoad(false);\n            } catch (error) {\n                setError(error)\n            } finally {\n                setOnLoad(false);\n            }\n        }\n        fetchMovieCast();\n    }, [movieId])\n\n  return (\n    <>\n    {onLoad && <Loader/>}\n    {movieCast && <CastList cast={movieCast}/>}\n    {error && <p>Something wrong, try again</p>}\n    </>\n  )\n}\n\nexport default Cast"],"names":["API_KEY","BASE_URL","getMovieTrending","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","concat","sent","abrupt","data","results","t0","alert","console","log","stop","apply","arguments","getSearchMovies","_ref2","_callee2","query","_context2","result","length","_x","getMovieDetails","_ref3","_callee3","id","_context3","_x2","getMoviesCredits","_ref4","_callee4","movieId","_context4","cast","_x3","getMoviesReviews","_ref5","_callee5","_context5","_x4","List","styled","_templateObject","_taggedTemplateLiteral","Item","_templateObject2","Image","_templateObject3","CastInfo","_templateObject4","Character","_templateObject5","Name","_templateObject6","CharacterInfo","_templateObject7","_jsx","children","map","profile_path","cast_id","name","character","_jsxs","src","noPoster","alt","useParams","_useState","useState","_useState2","_slicedToArray","movieCast","setMovieCast","_useState3","_useState4","error","setError","_useState5","_useState6","onLoad","setOnLoad","useEffect","fetchMovieCast","finish","_Fragment","Loader","CastList"],"sourceRoot":""}